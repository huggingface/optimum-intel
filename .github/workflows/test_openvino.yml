name: OpenVINO - Test

on:
  push:
    branches:
      - main
      - v*-release
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        test_pattern:
          [
            "*modeling.py",
            "*modeling_diffusion.py",
            "*modeling_sentence_transformers.py",
            "*quantization*",
            "*training*",
            "*export*",
          ]
        transformers-version: ["4.36.0", "4.45.*"]
        python-version: ["3.9"]
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu
          pip install .[openvino,openvino-tokenizers,diffusers,peft,tests] transformers[testing]==${{ matrix.transformers-version }}

      - name: Assert versions
        run: |
          python -c "import transformers; print(transformers.__version__); assert transformers.__version__.startswith('${{ matrix.transformers-version }}'.replace('.*', ''))"

      - if: ${{ matrix.transformers-version == '4.36.0' }}
        name: Downgrade Accelerate
        run: pip install accelerate==0.*

      - name: Test with Pytest (basic)
        run: |
          # catch failures early and quickly
          pytest tests/openvino/test_modeling_basic.py --durations=0

      - name: Test with Pytest (advanced)
        run: |
          pytest tests/openvino/${{ matrix.test_pattern }} --durations=0
        env:
          HF_HUB_READ_TOKEN: ${{ secrets.HF_HUB_READ_TOKEN }}

      - name: Install dependencies (nightly)
        run: |
          pip install --upgrade --pre openvino openvino-tokenizers --extra-index-url https://storage.openvinotoolkit.org/simple/wheels/nightly

      - name: Test with Pytest (nightly)
        run: |
          pytest tests/openvino/test_modeling_basic.py
